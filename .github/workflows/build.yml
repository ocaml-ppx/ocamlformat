name: Build

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          # Don't include every versions. OCaml-CI already covers that
          - 4.13.x

    runs-on: ${{ matrix.os }}

    steps:
      # Clone the project
      - uses: actions/checkout@v2

      # Setup
      - name: Setup OCaml ${{ matrix.ocaml-version }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Opam dependencies
        run: opam install --deps-only -t .

      - name: Runtest
        run: opam exec -- dune runtest

      - name: Check help files
        run: opam exec -- dune build @help --auto-promote

  docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - variant: debian
            variant-version: 11
            ocaml-version: 4.14
          - variant: alpine
            variant-version: 3.15
            ocaml-version: 4.14

    env:
      # Default variant that should also be tagged without extra suffix
      VARIANT_DEFAULT: debian
      REGISTRY: ghcr.io
      NAMESPACE: ${{ github.repository_owner }}

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/ocamlformat
          tags: |
            type=semver,pattern={{version}},suffix=-${{ matrix.variant }}
            type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.variant }}
            type=semver,pattern={{major}},suffix=-${{ matrix.variant }}

            type=semver,pattern={{version}},enable=${{ matrix.variant == env.VARIANT_DEFAULT }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ matrix.variant == env.VARIANT_DEFAULT }}
            type=semver,pattern={{major}},enable=${{ matrix.variant == env.VARIANT_DEFAULT }}

      - uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            VARIANT=${{ matrix.variant }}
            VARIANT_VERSION=${{ matrix.variant-version }}
            OCAML_VERSION=${{ matrix.ocaml-version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name == 'workflow_dispatch' }}
