(rule
 (with-outputs-to
  err_default_several_file.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} %{dep:sample/a.ml} %{dep:sample/b.ml}))))

(rule
 (alias runtest)
 (action
  (diff err_default_several_file.expected err_default_several_file.output)))

(rule
 (with-outputs-to
  err_inplace_and_check.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} --inplace --check %{dep:sample/a.ml}))))

(rule
 (alias runtest)
 (action
  (diff err_inplace_and_check.expected err_inplace_and_check.output)))

(rule
 (with-outputs-to
  err_inplace_and_output.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} --inplace --output o.ml %{dep:sample/a.ml}))))

(rule
 (alias runtest)
 (action
  (diff err_inplace_and_output.expected err_inplace_and_output.output)))

(rule
 (with-outputs-to
  err_no_arg.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat}))))

(rule
 (alias runtest)
 (action
  (diff err_no_arg.expected err_no_arg.output)))

(rule
 (with-outputs-to
  err_output_and_check.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} --output x.ml --check %{dep:sample/a.ml}))))

(rule
 (alias runtest)
 (action
  (diff err_output_and_check.expected err_output_and_check.output)))

(rule
 (with-outputs-to
  err_output_several_files.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} --output x.ml %{dep:sample/a.ml}
     %{dep:sample/b.ml}))))

(rule
 (alias runtest)
 (action
  (diff err_output_several_files.expected err_output_several_files.output)))

(rule
 (with-outputs-to
  err_stdin_and_file.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} %{dep:sample/a.ml} -))))

(rule
 (alias runtest)
 (action
  (diff err_stdin_and_file.expected err_stdin_and_file.output)))

(rule
 (with-outputs-to
  err_stdin_and_inplace.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} --inplace -))))

(rule
 (alias runtest)
 (action
  (diff err_stdin_and_inplace.expected err_stdin_and_inplace.output)))

(rule
 (with-outputs-to
  err_stdin_no_kind.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} -))))

(rule
 (alias runtest)
 (action
  (diff err_stdin_no_kind.expected err_stdin_no_kind.output)))

(rule
 (targets stdin_and_impl.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   stdin_and_impl.output
   (with-stdin-from
    sample/b.ml
    (run %{bin:ocamlformat} --root=. --impl -)))))

(rule
 (alias runtest)
 (action
  (diff stdin_and_impl.expected stdin_and_impl.output)))

(rule
 (targets stdin_and_intf.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   stdin_and_intf.output
   (with-stdin-from
    sample/a.mli
    (run %{bin:ocamlformat} --root=. --intf -)))))

(rule
 (alias runtest)
 (action
  (diff stdin_and_intf.expected stdin_and_intf.output)))

(rule
 (targets stdin_and_name.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   stdin_and_name.output
   (with-stdin-from
    sample/b.ml
    (run %{bin:ocamlformat} --root=. --name a.ml -)))))

(rule
 (alias runtest)
 (action
  (diff stdin_and_name.expected stdin_and_name.output)))

(rule
 (targets name_unknown_ext.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   %{targets}
   (run %{bin:ocamlformat} --root=. --name b.cpp %{dep:sample/b.ml}))))

(rule
 (alias runtest)
 (action
  (diff name_unknown_ext.expected name_unknown_ext.output)))

(rule
 (with-outputs-to
  err_stdin_name_unknown_ext.output
  (with-stdin-from
   sample/b.ml
   (with-accepted-exit-codes
    1
    (run %{bin:ocamlformat} --name b.cpp -)))))

(rule
 (alias runtest)
 (action
  (diff err_stdin_name_unknown_ext.expected err_stdin_name_unknown_ext.output)))

(rule
 (with-outputs-to
  err_several_files_and_kind.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} --impl --check %{dep:sample/a.mli}
     %{dep:sample/b.ml}))))

(rule
 (alias runtest)
 (action
  (diff err_several_files_and_kind.expected err_several_files_and_kind.output)))

(rule
 (with-outputs-to
  err_several_files_and_name.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} --name foo.ml --check %{dep:sample/a.mli}
     %{dep:sample/b.ml}))))

(rule
 (alias runtest)
 (action
  (diff err_several_files_and_name.expected err_several_files_and_name.output)))

(rule
 (with-outputs-to
  err_several_files_and_kind_inplace.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} --impl --check %{dep:sample/a.mli}
     %{dep:sample/b.ml}))))

(rule
 (alias runtest)
 (action
  (diff err_several_files_and_kind_inplace.expected
    err_several_files_and_kind_inplace.output)))

(rule
 (with-outputs-to
  err_several_files_and_name_inplace.output
  (with-accepted-exit-codes
   1
   (run %{bin:ocamlformat} --name foo.ml --check %{dep:sample/a.mli}
     %{dep:sample/b.ml}))))

(rule
 (alias runtest)
 (action
  (diff err_several_files_and_name_inplace.expected
    err_several_files_and_name_inplace.output)))

(rule
 (targets fmterr_file_and_name.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   %{targets}
   (with-accepted-exit-codes
    1
    (run %{bin:ocamlformat} --root=. --name foo.ml
      %{dep:sample/syntax_error.ml})))))

(rule
 (alias runtest)
 (action
  (diff fmterr_file_and_name.expected fmterr_file_and_name.output)))

(rule
 (targets fmterr_stdin_and_name.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   fmterr_stdin_and_name.output
   (with-stdin-from
    sample/syntax_error.ml
    (with-accepted-exit-codes
     1
     (run %{bin:ocamlformat} --root=. --name foo.ml -))))))

(rule
 (alias runtest)
 (action
  (diff fmterr_stdin_and_name.expected fmterr_stdin_and_name.output)))

(rule
 (targets fmterr_file_bad_kind.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   %{targets}
   (with-accepted-exit-codes
    1
    (run %{bin:ocamlformat} --root=. --impl %{dep:sample/a.mli})))))

(rule
 (alias runtest)
 (action
  (diff fmterr_file_bad_kind.expected fmterr_file_bad_kind.output)))

(rule
 (targets fmterr_stdin_bad_kind.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   fmterr_stdin_bad_kind.output
   (with-stdin-from
    sample/a.mli
    (with-accepted-exit-codes
     1
     (run %{bin:ocamlformat} --root=. --impl -))))))

(rule
 (alias runtest)
 (action
  (diff fmterr_stdin_bad_kind.expected fmterr_stdin_bad_kind.output)))

(rule
 (targets fmterr_file_and_name_bad_kind.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   %{targets}
   (with-accepted-exit-codes
    1
    (run %{bin:ocamlformat} --root=. --name foo.ml %{dep:sample/a.mli})))))

(rule
 (alias runtest)
 (action
  (diff fmterr_file_and_name_bad_kind.expected
    fmterr_file_and_name_bad_kind.output)))

(rule
 (targets fmterr_stdin_and_name_bad_kind.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   fmterr_stdin_and_name_bad_kind.output
   (with-stdin-from
    %{dep:sample/a.mli}
    (with-accepted-exit-codes
     1
     (run %{bin:ocamlformat} --root=. --name foo.ml -))))))

(rule
 (alias runtest)
 (action
  (diff fmterr_stdin_and_name_bad_kind.expected
    fmterr_stdin_and_name_bad_kind.output)))

(rule
 (targets check_formatted.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   %{targets}
   (run %{bin:ocamlformat} --root=. --check %{dep:sample/a.ml}))))

(rule
 (alias runtest)
 (action
  (diff check_formatted.expected check_formatted.output)))

(rule
 (targets check_not_formatted.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   %{targets}
   (with-accepted-exit-codes
    1
    (run %{bin:ocamlformat} --root=. --check %{dep:sample/b.ml})))))

(rule
 (alias runtest)
 (action
  (diff check_not_formatted.expected check_not_formatted.output)))

(rule
 (targets debug.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   %{targets}
   (run %{bin:ocamlformat} --root=. --debug %{dep:sample/b.ml}))))

(rule
 (alias runtest)
 (action
  (diff debug.expected debug.output)))

(rule
 (targets max_iter_1_ok.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   %{targets}
   (run ocamlformat --root=. --max-iters=1 %{dep:sample/a.ml}))))

(rule
 (alias runtest)
 (action
  (diff max_iter_1_ok.expected max_iter_1_ok.output)))

(rule
 (targets max_iter_1_failing.output)
 (deps .ocamlformat)
 (action
  (with-outputs-to
   %{targets}
   (with-accepted-exit-codes
    1
    (run %{bin:ocamlformat} --root=. --max-iters=1 %{dep:sample/b.ml})))))

(rule
 (alias runtest)
 (action
  (diff max_iter_1_failing.expected max_iter_1_failing.output)))

(rule
 (deps
  (source_tree roots/bad_version))
 (action
  (with-stderr-to
   ;; This test's stderr is ignored because it's not stable
   ;; (it contains the current git rev)
   %{null}
   (with-stdout-to
    conf_bad_version.output
    (with-stdin-from
     sample/a.ml
     (chdir
      roots/bad_version
      (with-accepted-exit-codes
       1
       (run %{bin:ocamlformat} --impl -))))))))

(rule
 (alias runtest)
 (action
  (diff conf_bad_version.expected conf_bad_version.output)))

(rule
 (deps
  (source_tree roots/malformed1))
 (action
  (with-outputs-to
   conf_malformed1.output
   (with-stdin-from
    sample/a.ml
    (chdir
     roots/malformed1
     (with-accepted-exit-codes
      1
      (run %{bin:ocamlformat} --impl -)))))))

(rule
 (alias runtest)
 (action
  (diff conf_malformed1.expected conf_malformed1.output)))

(rule
 (deps
  (source_tree roots/unknown_option))
 (action
  (with-outputs-to
   conf_unknown_option.output
   (with-stdin-from
    sample/a.ml
    (chdir
     roots/unknown_option
     (with-accepted-exit-codes
      1
      (run %{bin:ocamlformat} --impl -)))))))

(rule
 (alias runtest)
 (action
  (diff conf_unknown_option.expected conf_unknown_option.output)))

(rule
 (deps
  (source_tree roots/unknown_value))
 (action
  (with-outputs-to
   conf_unknown_value.output
   (with-stdin-from
    sample/a.ml
    (chdir
     roots/unknown_value
     (with-accepted-exit-codes
      1
      (run %{bin:ocamlformat} --impl -)))))))

(rule
 (alias runtest)
 (action
  (diff conf_unknown_value.expected conf_unknown_value.output)))

(rule
 (deps
  (source_tree roots/unknown_value))
 (action
  (with-outputs-to
   env_unknown_option.output
   (with-stdin-from
    sample/a.ml
    (setenv
     OCAMLFORMAT
     "unknown=true"
     (with-accepted-exit-codes
      1
      (run %{bin:ocamlformat} --impl -)))))))

(rule
 (alias runtest)
 (action
  (diff env_unknown_option.expected env_unknown_option.output)))

(rule
 (deps
  (source_tree roots/unknown_value))
 (action
  (with-outputs-to
   env_unknown_value.output
   (setenv
    OCAMLFORMAT
    "type-decl=unknown"
    (with-stdin-from
     sample/a.ml
     (with-accepted-exit-codes
      1
      (run %{bin:ocamlformat} --impl -)))))))

(rule
 (alias runtest)
 (action
  (diff env_unknown_value.expected env_unknown_value.output)))
