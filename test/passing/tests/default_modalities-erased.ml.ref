module type T = sig
  type t

  val x : t

  module U : sig
    type t

    val x : t
  end
end

module T : sig
  type t

  val x : t

  module U : sig
    type t

    val x : t
  end
end = struct end

module type T = sig end

module type T = sig end

module T : sig end = struct end

module T : sig end = struct end

module type T = [%ext: type t]

module type T = [%ext: type t]

module type T = [%ext:
type t

type u]

module type T = [%ext:
type t

type u]

[@@@attr: type t]

[@@@attr: type t]

[@@@attr:
type t

type u]

[@@@attr:
type t

type u]

module type T = sig
  (** cmt *)
  type t
end

module type T = sig
  (* cmt *)
  type t
end

module type T = sig
  (* cmt1 *)
  (* cmt2 *)
  (* cmt3 *)
  (* cmt4 *)
  type t
end

module type T = [%ext: (* cmt *) type t]

module type T = [%ext:
(* cmt1 *)
(* cmt2 *)
(* cmt3 *)
(* cmt4 *)
type t]

[@@@attr: (* cmt *) type t]

[@@@attr:
(* cmt1 *)
(* cmt2 *)
(* cmt3 *)
(* cmt4 *)
type t]
